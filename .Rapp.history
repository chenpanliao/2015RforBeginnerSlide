pwr.t.test(d=0.184,power=0.45,sig.level=0.05,type="one.sample",alternative="two.sided")
pwr.t.test(d=0.1855,power=0.45,sig.level=0.05,type="one.sample",alternative="two.sided")
pwr.t.test(d=0.1854,power=0.45,sig.level=0.05,type="one.sample",alternative="two.sided")
pwr.t.test(d=0.1853,power=0.45,sig.level=0.05,type="one.sample",alternative="two.sided")
pwr.t.test(d=0.1852,power=0.45,sig.level=0.05,type="one.sample",alternative="two.sided")
pwr.t.test(d=0.18525,power=0.45,sig.level=0.05,type="one.sample",alternative="two.sided")
pwr.t.test(d=0.18526,power=0.45,sig.level=0.05,type="one.sample",alternative="two.sided")
pwr.t.test(d=0.18523,power=0.45,sig.level=0.05,type="one.sample",alternative="two.sided")
pwr.t.test(d=0.18522,power=0.45,sig.level=0.05,type="one.sample",alternative="two.sided")
pwr.t.test(d=0.18521,power=0.45,sig.level=0.05,type="one.sample",alternative="two.sided")
pwr.t.test(d=0.18520,power=0.45,sig.level=0.05,type="one.sample",alternative="two.sided")
pwr.t.test(d=0.18521,power=0.45,sig.level=0.05,type="one.sample",alternative="two.sided")
pwr.t.test(d=0.185205,power=0.45,sig.level=0.05,type="one.sample",alternative="two.sided")
pwr.t.test(d=0.185204,power=0.45,sig.level=0.05,type="one.sample",alternative="two.sided")
pwr.t.test(d=0.185206,power=0.45,sig.level=0.05,type="one.sample",alternative="two.sided")
pwr.t.test(d=0.185207,power=0.45,sig.level=0.05,type="one.sample",alternative="two.sided")
pwr.t.test(d=0.185208,power=0.45,sig.level=0.05,type="one.sample",alternative="two.sided")
pwr.t.test(d=0.185209,power=0.45,sig.level=0.05,type="one.sample",alternative="two.sided")
d<-0.185209
pwr.t.test(d=d,power=0.9,sig.level=0.05,type="one.sample",alternative="two.sided")
?pwr.t.test
pwr.t.test(n=100, power=0.45, sig.level=0.05, type="one.sample",alternative="two.sided")
library(pwr)
pwr.t.test(n=100, power=0.45, sig.level=0.05, type="one.sample",alternative="two.sided")
x <- pwr.t.test(n=100, power=0.45, sig.level=0.05, type="one.sample",alternative="two.sided")
str(s)
str(x)
x$d
x <- pwr.t.test(n=100, power=0.45, sig.level=0.05, type="one.sample",alternative="one.sided")
x <- pwr.t.test(n=100, power=0.45, sig.level=0.05, type="one.sample",alternative="less")
x
pwr.t.test(d=x$d, power=0.9, sig.level=0.05, type="one.sample",alternative="less")
x <- pwr.t.test(n=100, power=0.45, sig.level=0.05, type="one.sample",alternative="less")
x <- pwr.t.test(n=100, power=0.45, sig.level=0.05, type="one.sample",alternative="greater")
x
pwr.t.test(d=x$d, power=0.9, sig.level=0.05, type="one.sample",alternative="greater")
pwr.t.test(d=-1*x$d, power=0.9, sig.level=0.05, type="one.sample",alternative="greater")
x <- pwr.t.test(n=100, power=0.45, sig.level=0.05, type="one.sample",alternative="greater")
x
pwr.t.test(n=100, power=0.45, sig.level=0.05, type="one.sample",alternative="less")
pwr.t.test(n=100, power=0.45, sig.level=0.05, type="one.sample",alternative="greater")
pwr.t.test(d=0.1529814, power=0.9, sig.level=0.05, type="one.sample",alternative="greater")
pwr.t.test(n=100, power=0.45, sig.level=0.05, type="one.sample",alternative="two.sides")
pwr.t.test(n=100, power=0.45, sig.level=0.05, type="one.sample",alternative="two.sided")
install.packages(lmtest)
install.packages("lmtest")
factor(2, 20)
gl(2, 20)
gl(4, 20)
library(lmtest)#
#
## 建立一組虛假資料#
y <- c(rep(0, 17), rep(1, 23))#
x1 <- gl(2, 20)#
x2 <- gl(4, 10)#
x3 <- gl(4, 10)
library(lmtest)#
#
## 建立一組虛假資料#
y <- c(rep(0, 17), rep(1, 23))#
x1 <- gl(2, 20)#
x2 <- gl(4, 10)#
x3 <- gl(4, 10)#
#
fit <- glm(y ~ x1 + x2 + x3, family = binomial)#
summary(fit)
library(lmtest)#
#
## 建立一組虛假資料#
y <- c(rep(0, 17), rep(1, 23))#
fa <- gl(2, 20)#
fb <- gl(4, 10)#
fc <- gl(4, 10)#
#
fit <- glm(y ~ fa + fb + fc, family = binomial)#
summary(fit)
fa
fb
fc
library(lmtest)#
#
## 建立一組虛假資料#
y <- c(rep(0, 17), rep(1, 23))#
fa <- gl(2, 20)#
fb <- gl(4, 10)#
fc <- gl(4, 1, 20)#
#
fit <- glm(y ~ fa + fb + fc, family = binomial)#
summary(fit)
fa
fb
fc
library(lmtest)#
#
## 建立一組虛假資料#
y <- c(rep(0, 17), rep(1, 23))#
fa <- gl(2, 20)#
fb <- gl(4, 10)#
fc <- gl(4, 1, 40)#
#
fit <- glm(y ~ fa + fb + fc, family = binomial)#
summary(fit)
gl(4, 10)
library(lmtest)#
#
## 建立一組虛假資料#
y <- c(rep(0, 15), rep(1, 25))#
fa <- gl(2, 20)#
fb <- gl(4, 10)#
fc <- gl(4, 1, 40)#
#
fit <- glm(y ~ fa + fb + fc, family = binomial)#
summary(fit)
fb
fa
fb
fc
library(lmtest)#
#
## 建立一組虛假資料#
y <- c(rep(0, 15), rep(1, 25))#
fa <- gl(2, 20)#
fb <- gl(4, 2, 20)#
fc <- gl(4, 1, 40)#
#
fit <- glm(y ~ fa + fb + fc, family = binomial)#
summary(fit)
library(lmtest)#
#
## 建立一組虛假資料#
y <- c(rep(0, 15), rep(1, 25))#
fa <- gl(2, 20)#
fb <- gl(4, 2, 40)#
fc <- gl(4, 1, 40)#
#
fit <- glm(y ~ fa + fb + fc, family = binomial)#
summary(fit)
library(lmtest)#
#
## 建立一組虛假資料#
y <- c(rep(0, 16), rep(1, 26))#
fa <- gl(2, 20)#
fb <- gl(4, 2, 40)#
fc <- gl(4, 1, 40)#
#
fit <- glm(y ~ fa + fb + fc, family = binomial)#
summary(fit)
library(lmtest)#
#
## 建立一組虛假資料#
y <- c(rep(0, 16), rep(1, 26))#
fa <- gl(2, 20)#
fb <- gl(4, 2, 40)#
fc <- gl(4, 5, 40)#
#
fit <- glm(y ~ fa + fb + fc, family = binomial)#
summary(fit)
fa
fb
fc
library(lmtest)#
#
## 建立一組虛假資料#
y <- c(rep(0, 16), rep(1, 26))#
fa <- gl(2, 20)#
fb <- gl(4, 2, 40)#
#
fit <- glm(y ~ fa + fb, family = binomial)#
summary(fit)
y <- c(rep(0, 16), rep(1, 26))#
fa <- gl(2, 20)#
fb <- gl(4, 2, 40)
fa
fb
y
library(lmtest)#
#
## 建立一組虛假資料#
y <- c(rep(0, 16), rep(1, 24))#
fa <- gl(2, 20)#
fb <- gl(4, 2, 40)#
#
fit <- glm(y ~ fa + fb, family = binomial)#
summary(fit)
library(lmtest)#
#
## 建立一組虛假資料#
y <- c(rep(0, 21), rep(1, 19))#
fa <- gl(2, 20)#
fb <- gl(4, 2, 40)#
#
fit <- glm(y ~ fa + fb, family = binomial)#
summary(fit)
library(lmtest)#
#
## 建立一組虛假資料#
y <- c(rep(0, 21), rep(1, 19))#
fa <- gl(2, 20)#
fb <- gl(4, 1, 40)#
#
fit <- glm(y ~ fa + fb, family = binomial)#
summary(fit)
data.frame(y,fa,fb)
library(lmtest)#
#
## 建立一組虛假資料#
y <- c(rep(0, 1), rep(1, 19), rep(0, 18), rep(1, 2))#
fa <- gl(2, 20)#
fb <- gl(4, 1, 40)#
#
fit <- glm(y ~ fa + fb, family = binomial)#
summary(fit)
data.frame(y,fa,fb)
library(lmtest)#
#
## 建立一組虛假資料#
y <- c(rep(0, 2), rep(1, 18), rep(0, 11), rep(1, 9))#
fa <- gl(2, 20)#
fb <- gl(4, 1, 40)#
#
fit <- glm(y ~ fa + fb, family = binomial)#
summary(fit)
library(lmtest)#
#
## 建立一組虛假資料#
y <- c(rep(0, 2), rep(1, 18), rep(0, 13), rep(1, 7))#
fa <- gl(2, 20)#
fb <- gl(4, 1, 40)#
#
fit <- glm(y ~ fa + fb, family = binomial)#
summary(fit)
library(lmtest)#
#
## 建立一組虛假資料#
y <- c(rep(0, 1), rep(1, 19), rep(0, 13), rep(1, 7))#
fa <- gl(2, 20)#
fb <- gl(4, 1, 40)#
#
fit <- glm(y ~ fa + fb, family = binomial)#
summary(fit)
library(lmtest)#
#
## 建立一組虛假資料#
y <- c(rep(0, 1), rep(1, 19), rep(0, 17), rep(1, 3))#
fa <- gl(2, 20)#
fb <- gl(4, 1, 40)#
#
fit <- glm(y ~ fa + fb, family = binomial)#
summary(fit)
library(lmtest)#
#
## 建立一組虛假資料#
y <- c(rep(0, 1), rep(1, 19), rep(0, 16), rep(1, 4))#
fa <- gl(2, 20)#
fb <- gl(4, 1, 40)#
#
fit <- glm(y ~ fa + fb, family = binomial)#
summary(fit)
str(summary(fit))
coef(fit)
summary(fit)$coefficients
print(summary(fit)$coefficients, digits=10)
?waldtest
coeftest(fit)
## 建立一組虛假資料並進行 2 x 4 設計的 logistic regression#
y <- c(rep(0, 1), rep(1, 19), rep(0, 16), rep(1, 4))#
fa <- gl(2, 20)#
fb <- gl(4, 1, 40)#
fit <- glm(y ~ fa + fb, family = binomial)#
summary(fit)#
#
## 想看很多小數點#
print(summary(fit)$coefficients, digits=10)#
#
## 針對 fa 的 Wald test#
library(lmtest)#
coeftest(fit)#
waldtest(fit, . ~ . - fa)
waldtest(fit)
?waldtest
waldtest(fit, . ~ . - fa, test = "Chisq")
seq(0,10,2)
?seq
library(xlsx)
?read.xlsx
?seq
seq(from = 0, to = 9)
\verb+seq(0, 9)
seq(0, 9)
install.packages("Matrix")
install.packages("Vegan")
install.packages("vegan")
?eval
"a <- 1"
expression("a <- 1")
eval(expression("a <- 1"))
eval(as.expression("a <- 1"))
as.expression("a <- 1")
?expression
parse(text = "a <- 1")
eval( parse(text = "a <- 1") )
a
eval( parse(text = "code字串") )
run <- c("net", "fsns", "'flns")#
for( i in run) {#
	txt <- paste0(i, "Var_sum1=sum(", i, "_people")#
	cat(txt, "\n")#
	eval(parse(text = txt))#
}
paste0(i, "Var_sum1=sum(", i, "_people")
paste0(i, "Var_sum1=sum(", i, "_people)")
run <- c("net", "fsns", "'flns")#
for( i in run) {#
	txt <- paste0(i, "Var_sum1=sum(", i, "_people)")#
	cat(txt, "\n")#
	eval(parse(text = txt))#
}
run <- c("net", "fsns", "'flns")#
for( i in run) {#
	txt <- paste0(i, "Var_sum1=sum(", i, "_people)")#
	cat(txt, "\n")#
#	eval(parse(text = txt))#
}
run <- c("net", "fsns", "flns")#
for( i in run) {#
	txt <- paste0(i, "Var_sum1=sum(", i, "_people)")#
	cat(txt, "\n")#
#	eval(parse(text = txt))#
}
a <- 1
a
1 -> b
b
a + b
ID <- 1:100
Subject <- 1:100
?binom.test
matrix(c(21, 5, 0, 24),2)
m <- matrix(c(21, 5, 0, 24),2)
mcnemar.test(m)
m <- matrix(c(210, 5, 0, 240),2)
mcnemar.test(m)
m <- matrix(c(210, 50, 20, 240),2)
mcnemar.test(m)
binom.test(50,70)
m <- matrix(c(210, 50, 550, 240),2)
m <- matrix(c(210, 50, 55, 240),2)
binom.test(50,70)
mcnemar.test(m)
binom.test(50,55)
binom.test(50,105)
1/0.95
c(1.1,2,5,3,1.1)
table(c(1.1,2,5,3,1.1))
length(table(c(1.1,2,5,3,1.1)))
is.boolean
is.boolen
is.boolan
is.boolaenn
T
class(T)
?boolean
?is.boolean
??boolean
?T
is.logical(T)
is.logical(1)
is.logical(0)
??combi
combn(letters[1:4], 2)
combn(1:10, 9)
combn(1:30, 29)
x.w <- scan()
x.b <- scan()
wilcox.test(x.w, x.b)
?wilcox.test
wilcox.test(x.w, x.b, exact = FALSE, correct = FALSE)
update.packages()
qnorm(0.27)
qnorm(0.28)
qnorm(0.27)
qnorm(0.26)
qnorm(0.27)
setwd("~/2015RforBeginnerSlide")#
mydt0 <- read.csv("nation-data.csv")#
mydt0
x.1 <- mydt0$Mortality.rate.child
x.2 <- mydt0$Mortality.rate.newborn
t.test(x1, x2, alternative = "g")
t.test(x.1, x.2, alternative = "g")
mean(x.1)
mean(x.2)
sd(x.1)
sd(x.2)
boxplot(x1,x2)
boxplot(x.1, x.2)
t.test(x.1, x.2, paired = T, alternative = "g")
t.test(x.2, x.1, paired = T, alternative = "l")
mean(x.1) ; mean(x.2) ; sd(x.1) ; sd(x.2)
?boxplot
boxplot(x.1, x.2)
boxplot(x.1, x.2, ylab = "Mortality rate (%)")
boxplot(x.1, x.2, ylab = "Mortality rate (%), xlab="")
)
boxplot(x.1, x.2, ylab = "Mortality rate (%)", xlab="")
boxplot(x.1, x.2, ylab = "Mortality rate (%)", xlab="")
?boxplot
bx <- boxplot(weight ~ group, data = PlantGrowth,#
              subset = group == "ctrl", plot = FALSE)#
bxp(bx, show.names=TRUE)#
par(op)
op <- par(mfrow = c(1, 2))#
#
## single group -- no label#
boxplot (weight ~ group, data = PlantGrowth, subset = group == "ctrl")#
## with label#
bx <- boxplot(weight ~ group, data = PlantGrowth,#
              subset = group == "ctrl", plot = FALSE)#
bxp(bx, show.names=TRUE)#
par(op)
op <- par(mfrow = c(1, 2))#
#
## single group -- no label#
boxplot (weight ~ group, data = PlantGrowth, subset = group == "ctrl")#
## with label#
bx <- boxplot(weight ~ group, data = PlantGrowth,#
              subset = group == "ctrl", plot = FALSE)#
bxp(bx, show.names=TRUE)#
par(op)
?axis
boxplot(x.1, x.2, ylab = "Mortality rate (%)", xlab="")
bx <- boxplot(x.1, x.2, ylab = "Mortality rate (%)", xlab="")
axis(1, bx, c("Child", "Newborn"))
bx <- boxplot(x.1, x.2, ylab = "Mortality rate (%)", xlab="", xaxt = "n")
axis(1, bx, c("Child", "Newborn"))
axis(2, bx, c("Child", "Newborn"))
axis(1, bx, c("Child", "Newborn"))
axis(2, xaxp=c(1,2), c("Child", "Newborn"))
plot(1:10, xaxt = "n")#
axis(1, xaxp = c(2, 9, 7))
bx <- boxplot(x.1, x.2, ylab = "Mortality rate (%)", xlab="", xaxt = "n")
axis(2, label = c("Child", "Newborn"))
axis(2, labels = c("Child", "Newborn"))
?axis
axis(2, labels = c("Child", "Newborn"), pos=bx)
bx <- boxplot(x.1, x.2, ylab = "Mortality rate (%)", xlab="")
axis(2, labels = c("Child", "Newborn"))
axis(2, at = bx, labels = c("Child", "Newborn"))
axis(1, at = bx, labels = c("Child", "Newborn"))
axis(1, 1:2, labels = c("Child", "Newborn"))
boxplot(x.1, x.2, ylab = "Mortality rate (%)", xlab="")
axis(1, 1:2, labels = c("Child", "Newborn"))
bx <- boxplot(x.1, x.2, ylab = "Mortality rate (%)", xlab="Group", xaxt = "n")
axis(1, 1:2, labels = c("Child", "Newborn"))
bx <- boxplot(x.1, x.2, ylab = "Mortality rate (%)",
xlab = "Group", xaxt = "n")
axis(1, 1:2, labels = c("Child", "Newborn"))
xlab = "Group", xaxt = "n")
bx <- boxplot(x.1, x.2, ylab = "Mortality rate (%)",
xlab = "Group", xaxt = "n")
bx <- boxplot(x.1, x.2, ylab = "Mortality rate (%)",
xlab = "Group", xaxt = "n")
axis(1, 1:2, labels = c("Child", "Newborn"))
boxplot(x.1, x.2, ylab = "Mortality rate (%)",
xlab = "Group", xaxt = "n")
axis(1, 1:2, labels = c("Child", "Newborn"))
par(mar=c(4,4,0,0)+0.1)
boxplot(x.1, x.2, ylab = "Mortality rate (%)",
axis(1, 1:2, labels = c("Child", "Newborn"))
xlab = "Group", xaxt = "n")
par(mar=c(4,4,0,0)+0.1)
boxplot(x.1, x.2, ylab = "Mortality rate (%)",
xlab = "Group", xaxt = "n")
axis(1, 1:2, labels = c("Child", "Newborn"))
